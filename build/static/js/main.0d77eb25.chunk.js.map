{"version":3,"sources":["components/CV.tsx","components/Profile.tsx","components/WorkData.tsx","components/Work.tsx","App.tsx","serviceWorker.ts","index.tsx","images/cv_front.png","images/cv_back.png"],"names":["CV","state","file","page","cvFront","previousDisabled","nextDisabled","onDocumentLoadSuccess","_ref","numPages","_this","setState","pages","handlePrevious","handleNext","cvBack","react","className","href","this","download","Fab_default","a","variant","aria-label","react_fontawesome_index_es","size","icon","IconButton_default","disabled","onClick","src","React","Profile","workData","img","title","android","featured","Work","GridList_default","cellHeight","spacing","cols","map","tile","GridListTile_default","key","Card_default","CardActionArea_default","CardMedia_default","component","image","CardContent_default","App","value","handleChange","event","Tabs_default","onChange","indicatorColor","centered","Tab_default","disableRipple","label","target","components_Profile","components_CV","components_Work","withStyles","root","flexGrow","Boolean","window","location","hostname","match","library","add","faAt","faLinkedin","faStackOverflow","faGithub","faMobileAlt","faArrowDown","faChevronLeft","faChevronRight","ReactDOM","render","react_default","createElement","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0d77eb25.chunk.js","sourcesContent":["import * as React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport cvBack from '../images/cv_back.png';\nimport cvFront from '../images/cv_front.png';\n\nclass CV extends React.Component {\n  public state = {\n    file: \"SERGIO_CAGICA_CV_2019_02_01.pdf\",\n    page: cvFront,\n    previousDisabled: true,\n    nextDisabled: false\n  };\n\n  public onDocumentLoadSuccess = ({ numPages }: any) => {\n    this.setState({ pages: numPages });\n  };\n\n  public handlePrevious = () => {\n    this.setState({ nextDisabled: false });\n    this.setState({ previousDisabled: true });\n    this.setState({ page: cvFront });\n  };\n\n  public handleNext = () => {\n    this.setState({ nextDisabled: true });\n    this.setState({ previousDisabled: false });\n    this.setState({ page: cvBack });\n  };\n\n  public render() {\n    return (\n      <div className=\"App-cv centered-container\">\n        <a href={this.state.file} download>\n          <Fab\n            variant=\"extended\"\n            aria-label=\"Download\"\n            className=\"btn-download\"\n          >\n            <FontAwesomeIcon size=\"2x\" icon=\"arrow-down\" />\n            <span>Download</span>\n          </Fab>\n        </a>\n        <div className=\"pdf-wrapper\">\n          <IconButton\n            disabled={this.state.previousDisabled}\n            className=\"btn-previous\"\n            aria-label=\"Previous\"\n            onClick={this.handlePrevious}\n          >\n            <FontAwesomeIcon size=\"2x\" icon=\"chevron-left\" />\n          </IconButton>\n          <div className=\"pdf-viewer\">\n            <img src={this.state.page} />\n          </div>\n          <IconButton\n            disabled={this.state.nextDisabled}\n            className=\"btn-next\"\n            aria-label=\"Next\"\n            onClick={this.handleNext}\n          >\n            <FontAwesomeIcon size=\"2x\" icon=\"chevron-right\" />\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CV;\n","import * as React from \"react\";\n\nclass Profile extends React.Component {\n\n  public render() {\n    return (\n      <div className=\"Profile\">\n            <div className=\"card\">\n              <h2>Hello!!</h2>\n              <p>\n                I'm a software engineer at TekEver currently working on\n                Santander banking apps. I work mainly with Android Applications,\n                but I have some experience in iOS too.\n              </p>\n              <p>\n                On a daily basis I work with SOAP and REST services, MVP and MVC\n                architectures, deploying and managing Google Play Apps and API\n                access, and also securing our applications.\n              </p>\n              <p>\n                I've been working as a software consultant for over 3 years now,\n                playing around with Cordova, Ionic 1 and 2, Angular 1 and 2,\n                RxJava, Unity, VR and web development stuff. In those years I've\n                done some innovation projects for Novabase involving VR in\n                mobile, Finzzy a ground breaking Personal Financial Manager, and\n                others.\n              </p>\n              <p>\n                For now, I love learning new stuff about Android Development.\n                Like to attend conferences about new technologies.\n              </p>\n            </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","const workData = [\n    {\n      img: 'https://lh3.googleusercontent.com/TpMr8Gj67yzq2SU-l1Jd1BJZmtB8eWw2KB6kvMS62MQXhgQ_F7IbhWhorWHkVIYQ7A=w1440-h620-rw',\n      title: 'Santander Particulares',\n      android: true,\n      featured: true,\n    },\n    {\n      img: 'https://lh3.googleusercontent.com/hUiaZ0ujmexeWpkpSu1eWeea8wLbLpYc02v8cFDa_evviAB94D3zqY5iUxDzrBjD9wg=w1440-h620-rw',\n      title: 'Santander Empresas',\n      android: true,\n      featured: true,\n    },\n    {\n      img: 'https://lh3.googleusercontent.com/8VAcWaLfmdG3f3W28jgp7NwRU719g52PuM1vaOLLV6kmIxWoVTLj3brl4CF_XnZuigus=w1440-h620-rw',\n      title: 'BPI App',\n      android: true,\n    },\n    {\n      img: 'https://lh3.ggpht.com/6BZmrPSQYwIdZhWuvJ5VExbUWyLuKrTSEJmT5XqdXQeLrlBcFh3KJj-DMNW3bdtVn54=w1440-h620-rw',\n      title: 'BPI Empresas',\n      android: true,\n    },\n    {\n      img: 'https://is3-ssl.mzstatic.com/image/thumb/Purple118/v4/b6/30/e8/b630e838-64bc-3acb-0b6b-8fa6f66d492b/pr_source.png/460x0w.png',\n      title: 'Santander Particulares',\n      android: false,\n      featured: true,\n    },\n    {\n      img: 'https://is5-ssl.mzstatic.com/image/thumb/Purple124/v4/7f/83/30/7f83301d-7534-0117-8650-d396e5daa3c4/pr_source.png/460x0w.png',\n      title: 'Santander Empresas',\n      android: false,\n      featured: true,\n    },\n    {\n      img: 'https://is2-ssl.mzstatic.com/image/thumb/Purple118/v4/df/d7/ac/dfd7ac42-4379-a2cc-a046-8735727e649e/pr_source.jpg/460x0w.jpg',\n      title: 'BPI App',\n      android: false,\n    },\n    {\n      img: 'https://is2-ssl.mzstatic.com/image/thumb/Purple128/v4/5a/51/3e/5a513e00-bd55-d769-23e9-b1631dd09415/pr_source.jpg/460x0w.jpg',\n      title: 'Bankinter',\n      android: false,\n    }\n  ];\n  \n  export default workData;","import * as React from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\n\nimport workData from \"./WorkData\";\n\nclass Work extends React.Component {\n  public render() {\n    return (\n      <div className=\"App-work\">\n        <GridList cellHeight={260} spacing={30} cols={3}>\n          {workData.map(tile => (\n            <GridListTile key={tile.img} cols={1}>\n              <Card className=\"card\">\n                <CardActionArea>\n                  <CardMedia\n                    component=\"img\"\n                    className=\"card-img\"\n                    image={tile.img}\n                    title={tile.title}\n                  />\n                  <CardContent>\n                    <h3>{tile.title}</h3>\n                    <h5>{tile.title}</h5>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    );\n  }\n}\n\nexport default Work;\n","import \"./styles/App.scss\";\n\nimport * as React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport CV from \"./components/CV\";\nimport Profile from \"./components/Profile\";\nimport Work from \"./components/Work\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  }\n};\n\nclass App extends React.Component {\n  public state = {\n    value: 0\n  };\n\n  public handleChange = (event: any, value: any) => {\n    this.setState({ value });\n  };\n\n  public render() {\n    const { value } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"wrapper\">\n            <div className=\"left-col\">\n              <h2>Sérgio Cagica</h2>\n              <h5>Mobile Developer</h5>\n            </div>\n            <span className=\"spacer\"/>\n            <div className=\"right-col\">\n              <Tabs\n                className=\"Nav\"\n                value={value}\n                onChange={this.handleChange}\n                indicatorColor=\"#81808B\"\n                centered={false}\n              >\n                <Tab disableRipple label=\"Profile\" />\n                <Tab disableRipple label=\"CV\" />\n                <Tab disableRipple label=\"Work\" />\n                {/*<Tab disableRipple label=\"ChatBot\" />*/}\n              </Tabs>\n\n              {/*  <IconButton href=\"tel:+351918961372\" target=\"_blank\" aria-label=\"Telephone\">\n                <FontAwesomeIcon size=\"2x\" icon=\"mobile-alt\" />\n              </IconButton> */}\n              <IconButton\n                href=\"mailto:sergio.pcagica@gmail.com\"\n                target=\"_blank\"\n                aria-label=\"Email\"\n              >\n                <FontAwesomeIcon size=\"2x\" icon=\"at\" />\n              </IconButton>\n              <IconButton\n                href=\"https://www.linkedin.com/in/sergio-cagica/\"\n                target=\"_blank\"\n                aria-label=\"LinkedIn\"\n              >\n                <FontAwesomeIcon size=\"2x\" icon={[\"fab\", \"linkedin\"]} />\n              </IconButton>\n              <IconButton\n                href=\"https://stackoverflow.com/users/3620324/pcagica\"\n                target=\"_blank\"\n                aria-label=\"StackOverflow\"\n              >\n                <FontAwesomeIcon size=\"2x\" icon={[\"fab\", \"stack-overflow\"]} />\n              </IconButton>\n              <IconButton\n                href=\"https://github.com/cagica\"\n                target=\"_blank\"\n                aria-label=\"Github\"\n              >\n                <FontAwesomeIcon size=\"2x\" icon={[\"fab\", \"github\"]} />\n              </IconButton>\n            </div>\n          </div>\n        </header>\n        <div className=\"App-body\">\n          {value === 0 && <Profile />}\n          {value === 1 && <CV />}\n          {value === 2 && <Work />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './styles/index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faGithub, faLinkedin, faStackOverflow } from '@fortawesome/free-brands-svg-icons';\nimport { faArrowDown, faAt, faMobileAlt, faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlibrary.add(faAt, faLinkedin, faStackOverflow, faGithub, faMobileAlt, faArrowDown, faChevronLeft, faChevronRight);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cv_front.4a36c5f9.png\";","module.exports = __webpack_public_path__ + \"static/media/cv_back.044690e6.png\";"],"sourceRoot":""}